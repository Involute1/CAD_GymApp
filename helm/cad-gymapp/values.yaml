# Default values for cad-gymapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

#replicaCount: 1
#
#image:
#  repository: nginx
#  pullPolicy: IfNotPresent
#  # Overrides the image tag whose default is the chart appVersion.
#  tag: ""
#
#imagePullSecrets: []
#nameOverride: ""
#fullnameOverride: ""
#
#serviceAccount:
#  # Specifies whether a service account should be created
#  create: true
#  # Annotations to add to the service account
#  annotations: {}
#  # The name of the service account to use.
#  # If not set and create is true, a name is generated using the fullname template
#  name: ""
#
#podAnnotations: {}
#
#podSecurityContext: {}
#  # fsGroup: 2000
#
#securityContext: {}
#  # capabilities:
#  #   drop:
#  #   - ALL
#  # readOnlyRootFilesystem: true
#  # runAsNonRoot: true
#  # runAsUser: 1000
#
#service:
#  type: ClusterIP
#  port: 80
#
#ingress:
#  enabled: false
#  className: ""
#  annotations: {}
#    # kubernetes.io/ingress.class: nginx
#    # kubernetes.io/tls-acme: "true"
#  hosts:
#    - host: chart-example.local
#      paths:
#        - path: /
#          pathType: ImplementationSpecific
#  tls: []
#  #  - secretName: chart-example-tls
#  #    hosts:
#  #      - chart-example.local
#
#resources: {}
#  # We usually recommend not to specify default resources and to leave this as a conscious
#  # choice for the user. This also increases chances charts run on environments with little
#  # resources, such as Minikube. If you do want to specify resources, uncomment the following
#  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
#  # limits:
#  #   cpu: 100m
#  #   memory: 128Mi
#  # requests:
#  #   cpu: 100m
#  #   memory: 128Mi
#
#autoscaling:
#  enabled: false
#  minReplicas: 1
#  maxReplicas: 100
#  targetCPUUtilizationPercentage: 80
#  # targetMemoryUtilizationPercentage: 80
#
#nodeSelector: {}
#
#tolerations: []
#
#affinity: {}

domain: "dev.drescherflo.de"
letsencrypt:
  mail: ""
  issuer: "staging"

replicas: 2
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 100
  targetCPUUtilizationPercentage: 50
  # targetMemoryUtilizationPercentage: 80

imagePullPolicy: Always
gymServiceUrl: "http://gym-service-service:7081/gym"
userServiceUrl: "http://user-service-service:7082/user"
workoutServiceUrl: "http://workout-service-service:7083/workout"
reportingServiceUrl: "http://reporting-service-service:7084/reporting"


frontend:
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-frontend:latest
  port: 80

gymService:
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-gym-service:latest
  port: 7081

invoiceCronjob:
  schedule: "* * 1 * *"
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-invoice-cronjob:latest
  restartPolicy: OnFailure

userService:
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-user-service:latest
  port: 7082
  sqlDbUrl: "postgresql-user-postgresql-ha-pgpool:5432"
  springDatasourceUrl: "jdbc:postgresql://postgresql-user-postgresql-ha-pgpool:5432/cad"
  springDatasourceUsername: postgres
  springDatasourcePassword: test123
  freeMaxUserCount: 10
  standardMaxUserCount: 100

workoutService:
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-workout-service:latest
  port: 7083
  sqlDbUrl: "postgresql-workout-postgresql-ha-pgpool:5432"
  springDatasourceUrl: "jdbc:postgresql://postgresql-workout-postgresql-ha-pgpool:5432/cad"
  springDatasourceUsername: postgres
  springDatasourcePassword: test123

reportingService:
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-reporting-service:latest
  port: 7084
  gmailSmtpUsername: ""
  gmailSmtpPassword: ""

gatewayService:
  image: europe-west3-docker.pkg.dev/cad-gym-app/cad-repo-dev/cad-gym-gateway-service:latest
  port: 8080
