apiVersion: apps/v1
kind: Deployment
metadata:
  name: workout-service-deployment
  labels:
    app: workout-service
spec:
  selector:
    matchLabels:
      app: workout-service
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: workout-service
    spec:
      containers:
        - name: workout
          image: {{ .Values.workoutService.image }}
          env:
            - name: SQL_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: workout-service-configmap
                  key: sql_db_url
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: workout-service-configmap
                  key: spring_datasource_url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: workout-service-secret
                  key: spring_datasource_username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: workout-service-secret
                  key: spring_datasource_password
          command: [ "./wait-for-it.sh" ]
          args: [ "$(SQL_DB_URL)", "--", "java", "-jar", "/WorkoutService.jar" ]
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 7083
#          livenessProbe:
#            httpGet:
#              path: /workout/healthcheck
#              port: 7083
#            initialDelaySeconds: 10
#            timeoutSeconds: 5
#          readinessProbe:
#            httpGet:
#              path: /workout/healthcheck
#              port: 7083
#            initialDelaySeconds: 10
#            timeoutSeconds: 5
