apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  labels:
    app: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: {{ .Values.userService.image }}
          env:
            - name: SQL_DB_URL
              valueFrom:
                configMapKeyRef:
                  name: user-service-configmap
                  key: sql_db_url
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: user-service-configmap
                  key: spring_datasource_url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: spring_datasource_username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-service-secret
                  key: spring_datasource_password
            - name: GYM_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: user-service-configmap
                  key: gym_service_url
            - name: FREE_MAX_USER_COUNT
              valueFrom:
                configMapKeyRef:
                  name: user-service-configmap
                  key: free_max_user_count
            - name: STANDARD_MAX_USER_COUNT
              valueFrom:
                configMapKeyRef:
                  name: user-service-configmap
                  key: standard_max_user_count
          command: [ "./wait-for-it.sh" ]
          args: [ "$(SQL_DB_URL)", "--", "java", "-jar", "/UserService.jar" ]
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - containerPort: 7082
          resources:
            requests:
              cpu: "250m"
